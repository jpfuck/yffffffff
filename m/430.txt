<html lang="ja" xmlns="http://www.w3.org/1999/xhtml"> <head>   <base href="http://ekstra.de/1ef6jackethouse2f137062079399100302" />   <!--・-->   <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />   <!-- SpaceID=2077630581 loc=Z noad-spid -->   <script language="javascript"></script>   <noscript></noscript>  </head>  <body>   <!--キャッシュ template_badge_noframe-->   <!--/キャッシュ template_badge_noframe-->   <div style="position:relative">    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />    <title>[hrefx]</title>    <meta name="description" content="電動自転車バッテリーリサイクルサービス！。X21-05 YAMAHA ヤマハ" />    <meta http-equiv="Content-Language" content="ja" />    <meta http-equiv="Content-Script-Type" content="text/javascript" />    <meta http-equiv="Content-Style-Type" content="text/css" />    <h1>[metatags_title]</h1>    <pre>%Article_Comment%</pre>    <div id="page" class="hfeed site">     <header id="masthead" class="site-header" role="banner">      <div id="titlebar" class="titlebar">       <div class="logo_area">        <h1 class="site-title">[hrefx][hrefx]<br /></h1>        <h1>[metatags_keywords]</h1>        <br />        <h2>[metatags_description] </h2>        <br />        <br />        <br />       </div> [hrefx]       <div id="keyvisual" class="keyvisual">        [hrefx]       </div>       <div id="navbar" class="navbar">        <nav id="site-navigation" class="navigation main-navigation" role="navigation">         <h3 class="menu-toggle"> メニュー </h3> [hrefx]         <div class="menu-site-navigation-container">          <ul id="menu-site-navigation" class="nav-menu">           <li id="menu-item-7361" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-7361">[hrefx]</li> [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx]           <li id="menu-item-7365" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-7365">[hrefx]</li>           <li id="menu-item-7364" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-7364">[hrefx]</li>           <li id="menu-item-9048" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9048">[hrefx]</li>           <li id="menu-item-9049" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9049">[hrefx]</li>           <li id="menu-item-9872" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9872">[hrefx]</li>          </ul>         </div>         <form role="search" method="get" class="search-form" action="%mainshell%/merrybiz/">          <label> <span class="screen-reader-text">検索:</span> <input type="search" class="search-field" placeholder="検索 …" value="" name="s" /> </label>          <input type="submit" class="search-submit" value="検索" />         </form>        </nav>       </div>      </div>     </header>     <div id="main" class="site-main">      <div id="primary" class="content-area">       <div id="content" class="site-content" role="main">        <article id="post-7344" class="post-7344 page type-page status-publish hentry">         <div class="entry-content">          <div id="top">           <p> </p>           <p></p>           <div class="advantage_box_col01">            <dl class="left">             <dt>             </dt>            </dl>            <dl class="right">             <dt>             </dt>            </dl>            <dl class="left">             <ul>              <li>[hrefx]</li>              <li>[hrefx]</li>              <li>[hrefx]</li>              <li>[hrefx]</li>             </ul>             <dt>             </dt>             <dd>              <h3> <p>[metatags_keywords]</p></h3>             </dd>            </dl>            <dl class="right">             <dt>             </dt>             <dd>              <h3> <p>[metatags_title]</p></h3>             </dd>            </dl>            <dl class="left">             <dt>             </dt>             <dd>              <h3> <p> <b>[metatags_title]</b><br /> [description]</p></h3>             </dd>            </dl>           </div>           <h2>ご利用方法</h2>           <p> </p>           <p style="text-align: right; padding-bottom: 30px;">[hrefx]</p>           <h2>[hrefx]</h2> [hrefx]           <p style="text-align: right; padding-bottom: 30px;">[hrefx]</p>           <h2></h2> [hrefx]           <div class="consultation-box" style="text-align: center;">            [hrefx] [hrefx]            <ul>             [hrefx]            </ul>            <p>[hrefx]</p>            <h2><b>[metatags_title]</b><br /> [description]</h2>            <p>[hrefx][hrefx][hrefx]</p>            <p style="text-align: right;">[hrefx]</p>            <p> </p>            <h2>[metatags_description]</h2>            <p>[metatags_keywords]</p>            <h2>[metatags_title]</h2> [hrefx]            <div class="contents_b_nav">             [hrefx]            </div>           </div>           <p><br /> </p>           <p>            <noscript></noscript></p>           <div style="display:inline;">            <p></p>            <p><br /> <br /> </p>            <p>             <noscript></noscript></p>            <div style="display:inline;">             <p></p>             <footer class="entry-meta">             </footer>            </div>           </div>          </div>         </div>        </article>       </div>      </div>      <div id="tertiary" class="sidebar-container" role="complementary">       <div class="sidebar-inner">        <div class="widget-area">         <aside id="text-2" class="widget widget_text">          <div class="textwidget">           <div class="booklet-download">            [hrefx]           </div>          </div>         </aside>         <aside id="text-8" class="widget widget_text">          <div class="textwidget">           <div style="margin-bottom:20px;">            [hrefx]           </div> [hrefx]           <div class="blog_banner">            [hrefx]           </div> [hrefx]          </div> [hrefx]         </aside> [hrefx]        </div> [hrefx]       </div> [hrefx]      </div> [hrefx]     </div> [hrefx]     <footer id="colophon" class="site-footer" role="contentinfo">      [hrefx] [hrefx]      <div class="site-info">       [hrefx]       <li><a href="http://www.cheapjerseys11.com/" target="_blank">cheap jerseys</a></li>       <div class="logo-copyright">        <p class="copyright">copyright[hrefx] 2015 merrybiz inc. all rights reserved.</p>       </div>      </div>     </footer>    </div>    <div id="fb-root"></div>    <div style="display:none">     247     <div>      <div style="display:none;">       235      </div>      <!-- pcache202.search.ogk.yahoo.co.jp Fri Jun 23 12:36:58 JST 2017 -->      <script language="javascript"></script>      <script language="javascript"></script>      <noscript>       <div style="position:absolute;">        <img width="1" height="1" alt="" src="http://b11.yahoo.co.jp/b?P=rDfB2DEyNy7eo1Hj61LaotMtNjcuMgAAAABQSA.4&amp;T=14h0hq43i%2fX%3d1498189019%2fE%3d2077630581%2fR%3djp_ws%2fK%3d5%2fV%3d3.1%2fW%3dJ%2fY%3djp%2fF%3d1881437970%2fH%3dYWRjdmVyPTYuOC4w%2fQ%3d-1%2fS%3d1%2fJ%3d594C8CDB" />       </div>      </noscript>     </div>    </div>   </div>   </body></html>
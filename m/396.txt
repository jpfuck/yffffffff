<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"> <head>   <meta http-equiv="Content-Type" content="text/html;charset=UTF-8 "/>   <meta name="description" content="[metatags_description]" />   <meta name="keywords" content="[metatags_keywords] " />   <meta name="format-detection" content=" [metatags_description] " />   <meta name="TopTitle" content="[metatags_title] " />   <meta http-equiv="X-UA-Compatible" content="IE=edge" />   <title>[metatags_title]</title>  </head>  <body id="toppage_body">   <div style="position:relative">    <link rel="canonical" href="http://www.toyoumo.jp/shop/default.aspx" />    <link rel="stylesheet" type="text/css" href="/css/display_switch.css" />    <link rel="SHORTCUT ICON" href="/img/favicon.ico" />    <noscript>     <iframe src="//www.googletagmanager.com/ns.html?id=GTM-5D8LTB" height="0" width="0" style="display:none;visibility:hidden"></iframe>    </noscript>    <div class="wrapper_">     <!-- script type="text/javascript" src="/js/ga_event_top_pc.js"></script -->     <div id="header_top">      <div id="header_top_inner">       <h1 id="catch_ttl"><b style="color:black;background-color:#ffff66"></b><b style="color:black;background-color:#a0ffff"></b>[metatags_title]<b style="color:black;background-color:#ffff66"></b><strong>[metatags_title]</strong><br /> [description]</h1>       <ul id="customernav_login">        <li id="nav_login">[hrefx]</li>       </ul>       <ul id="customernav">        <li id="nav_first">[hrefx]</li>        <li id="nav_guide">[hrefx]</li>        <li id="nav_faq">[hrefx]</li>       </ul>       <dl id="hFontsize">        <dd id="font_s">         [hrefx]        </dd>        <dd id="font_m">         [hrefx]        </dd>        <dd id="font_l">         [hrefx]        </dd>       </dl>      </div>     </div>     <div id="header">      <div id="header_inner">       <p id="sitelogo">[hrefx]</p>       <ul id="header_info">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li> 	   <a href="https://www.cheapjerseys-nfl.com/" target="_blank">cheap jerseys</a>      </ul>      </div>     </div>     <!-- BENLY SUPPORT BANNER -->     <div>      [hrefx]     </div>     <div class="container_">      <div class="contents_">       <div class="mainframe_">        <div class="visual_">         <ul id="main_slider_">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li><a href="http://www.authenticcheapjerseyschina.com/" target="_blank">cheap jerseys</a>		         </ul>        </div>        <div id="reco1"></div>        <div class="CategoryStyleP_">         <div class="CategoryStyleP_Line_">          <div class="CategoryStyleP_Item_">           <div class="cateimg_">            [hrefx]           </div>          </div>          <div class="CategoryStyleP_Item_">           <div class="cateimg_">            [hrefx]           </div>          </div>         </div>         <div class="CategoryStyleP_Line_">          <div class="CategoryStyleP_Item_">           <div class="cateimg_">            [hrefx]           </div>           <div class="catedesc_">            <h3 class="name_">[hrefx]</h3>           </div>          </div>          <div class="CategoryStyleP_Item_">           <div class="cateimg_">            [hrefx]           </div>           <div class="catedesc_">            <h3 class="name_">[hrefx]</h3>           </div>          </div>         </div>         <div class="CategoryStyleP_Line_">          <div class="CategoryStyleP_Item_">           <div class="cateimg_">            [hrefx]           </div>          </div>          <div class="topiclist_">           <div class="topiclist_head_">            <h2>[metatags_keywords]</h2>           </div>           <div class="topiclist_body_">            <ul class="topicline_">             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li>             <li>[hrefx] </li> 			<a href="http://www.elitecheapnfljerseysauthentic.com/" target="_blank">cheap jerseys</a>           </ul>           </div>          </div>         </div>         <div class="leftmenuframe_">          <div class="sidebox_" id="sidebox_top">           <div class="banner_">            [hrefx]           </div>           <div class="banner_">            [hrefx]           </div>          </div>          <div class="sidebox_">           <div id="search_box">            <div class="search_form_">            </div>            <div class="to_searchdetail">             [hrefx]            </div>           </div>          </div>          <div class="sidebox_" id="sidebox_genre">           <h2 class="img_ttl_">[hrefx]</h2>           <ul class="genre_tree_">            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li>            <li class="genre_tree1_">[hrefx]</li> 		   <a href="https://www.cheap-nfl-jerseys-shop.com/" target="_blank">cheap jerseys</a>          </ul>          </div>          <div class="sidebox_" id="sidebox_bottom">           <div class="banner_">            [hrefx]           </div>           <div class="banner_">            [hrefx]           </div>           <div class="banner_">            [hrefx]           </div>           <div class="banner_">            [hrefx]           </div>          </div>         </div>         <div class="rightmenuframe_">          <div class="sidebox_" id="sidebox_itemhistory">           <h2>[metatags_title]</h2>           <div id="itemHistory">            <!-- script type="text/javascript" src="/js/jquery.cookie.js"></script -->            <input type="hidden" id="js_leave_History" value="0" />            <!-- script type="text/javascript" src="/js/goods_history.js"></script -->           </div>          </div>         </div>        </div>        <div id="footer">         <div id="footer_inner">          <p id="go_pagetop">[hrefx]</p>          <div id="footernav">           <div id="footernav_bottom">            <div class="footernav_line">             <div class="footernav_box">              <h3>[metatags_keywords]</h3>              <ul>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>               <li>[hrefx]</li> 			  <li><a href="http://www.cheapjerseys11.com/" target="_blank">cheap jerseys</a></li>               </ul>             </div>            </div>           </div>          </div>         </div>        </div>       </div>       <noscript>        <div style="position:absolute;">         <img width="1" height="1" alt="" src="http://b6.yahoo.co.jp/b?P=iCKxdzEyNy5nICCnoJrEJudtMjE5LgAAAAA2x0Y9&amp;T=14h365mor%2fX%3d1499335347%2fE%3d2077630581%2fR%3djp_ws%2fK%3d5%2fV%3d3.1%2fW%3dJ%2fY%3djp%2fF%3d1657011276%2fH%3dYWRjdmVyPTYuOC4w%2fQ%3d-1%2fS%3d1%2fJ%3d595E0AB3" />        </div>       </noscript>      </div>      </div>   </div>  </div> </body></html>